{"name":"pw","tagline":"Simple Password Manager","body":"pw(1) -- simple password manager\r\n================================\r\n\r\n## SYNOPSIS\r\n\r\n   `pw` [-a _ARCHIVE_] [_COMMAND_] [_ARGS_...] [_OPTIONS_...]\r\n\r\n\r\n## DESCRIPTION\r\n\r\n   **pw** is a simple password manager that keeps passwords inside a\r\n   gpg2(1) encrypted *tgz* archive. The content of the archive is a\r\n   directory tree with a file for each password entry.  The first line\r\n   of the file is the password, and the rest can optionally be\r\n   additional or related info. The **pw** utility provides commands\r\n   for manipulating the passwords, allowing the user to add, remove,\r\n   edit, generate passwords etc.\r\n\r\n\r\n## COMMANDS\r\n\r\n* `ls` [_path_] [`-t`,`--tree`]\r\n\r\n    List password files, optionally as a tree.\r\n\r\n* [`get`] _pwfile_\r\n\r\n    Copy to clipboard the password (it will be cleared in a few seconds).\r\n\r\n* `show` _pwfile_\r\n\r\n    Print out the password contained in the given file.\r\n\r\n* `gen` _pwfile_ [_length_] [`-n`,`--no-symbols`] [`-i`,`--in-place` | `-f`,`--force`]\r\n\r\n    Generate a new password with optionally no symbols.  Put it on the\r\n    clipboard and clear board after a few seconds.  Prompt before\r\n    overwriting existing password unless forced.  Optionally replace\r\n    only the first line of an existing file with a new password.\r\n\r\n* `set` _pwfile_ [`-e`,`--echo` | `-m`,`--multiline`] [`-f`,`--force`]\r\n\r\n    Insert new password. Optionally, echo the password back to the\r\n    console during entry. Or, optionally, the entry may be multiline.\r\n    Prompt before overwriting existing password unless forced.\r\n\r\n* `edit` _pwfile_\r\n\r\n    Edit or add a password file using vi.\r\n\r\n* `find` _pattern_ [`-t`,`--tree`]\r\n\r\n    List pwfiles that match pattern, optionally in tree format.\r\n\r\n* `grep` _search-string_\r\n\r\n    Search for password files containing _search-string_ when decrypted.\r\n\r\n* `rm` _pwfile_ [`-r`,`--recursive`] [`-f`,`--force`]\r\n\r\n    Remove existing password file or directory, optionally forcefully.\r\n\r\n* `mv` _old-path_ _new-path_ [`-f`,`--force`]\r\n\r\n    Rename or move _old-path_ to _new-path_, optionally forcefully.\r\n\r\n* `cp` _old-path_ _new-path_ [`-f`,`--force`]\r\n\r\n    Copy _old-path_ to _new-path_, optionally forcefully.\r\n\r\n* `log` [-10]\r\n\r\n    List the history of (last 10) changes.\r\n\r\n* `pass`,`set-passphrase`\r\n\r\n    Set the passphrase of the archive (gpg symmetric encryption).\r\n\r\n* `keys`,`set-keys` [_gpg-key_...]\r\n\r\n    Set the gpg key(s) of the archive (asymmetric encryption).\r\n\r\n    **Note:** Symmetric and asymmetric encryption are exclusive;\r\n    either you use a passphrase (for symmetric encryption), or gpg\r\n    key(s) (for asymmetric encryption).\r\n\r\n* `export` _dirpath_\r\n\r\n    Export the content of the archive to the given directory.\r\n\r\n* `import` _dirpath_\r\n\r\n    Import the content of the archive from the given directory.\r\n\r\n* `help`\r\n\r\n    Show this help text.\r\n\r\n* `version`\r\n\r\n    Show version information.\r\n\r\n\r\n## FILES\r\n\r\n   `~/.pw/`\r\n\r\n          The default pw directory.\r\n\r\n   `~/.pw/pw.tgz.gpg`\r\n\r\n          The default archive.\r\n\r\n   `~/.pw/config.sh`\r\n\r\n          The configuration file.\r\n\r\n\r\n## ENVIRONMENT VARIABLES\r\n\r\n   `PW_DIR`\r\n\r\n          Overrides the default pw directory.\r\n\r\n   `EDITOR`\r\n\r\n          The location of the text editor used by edit.\r\n\r\n\r\n## SIMPLE EXAMPLE\r\n\r\n   Some basic usage is demonstrated on the examples below.\r\n\r\n   user@laptop:~$ `pw`\r\n\r\n    Creating a new archive '/home/user/.pw/pw.tgz'.\r\n    Enter new passphrase for archive '/home/user/.pw/pw.tgz': \r\n    Retype the passphrase for archive '/home/user/.pw/pw.tgz': \r\n    Commands:\r\n        gen, set, ls, get, show, edit, find, grep, rm, mv, cp, log, help\r\n    Type q to quit, p to change the passphrase.\r\n    pw> \r\n\r\n   pw> `set test1`\r\n\r\n    Enter password for test1: \r\n    Retype password for test1: \r\n\r\n   pw> `get test1`\r\n\r\n    Password of test1 sent to clipboard. Will clear in 45 seconds.\r\n\r\n   pw> `show test1`\r\n\r\n    passw1\r\n\r\n   pw> `test1`\r\n\r\n    Password of test1 sent to clipboard. Will clear in 45 seconds.\r\n\r\n   pw> `ls test1`\r\n\r\n    passw1\r\n\r\n   pw> `set test2/test3`\r\n\r\n    Enter password for test2/test3: \r\n    Retype password for test2/test3: \r\n\r\n   pw> `gen test2/test4`\r\n\r\n    Password of test2/test4 sent to clipboard. Will clear in 45 seconds.\r\n\r\n   pw> `show test2/test4`\r\n\r\n    ;oOd~myTkx4_'wp.Mw&O.PmJNSpDoG\r\n\r\n   pw> `ls`\r\n\r\n    test2/test3\r\n    test2/test4\r\n    test1\r\n\r\n   pw> `ls -t`\r\n\r\n    ├── test1\r\n    └── test2\r\n        ├── test3\r\n        └── test4\r\n\r\n   pw> `ls test2`\r\n\r\n    test2/test3\r\n    test2/test4\r\n\r\n   pw> `find test3`\r\n\r\n    test2/test3\r\n\r\n   pw> `show test2/test3`\r\n\r\n    passw3\r\n\r\n   pw> `log`\r\n\r\n    2 minutes ago: Add given password for test1.\r\n    2 minutes ago: Add given password for test2/test3.\r\n    2 minutes ago: Add generated password for test2/test4.\r\n\r\n   pw> `q`\r\n\r\n   user@laptop:~$\r\n\r\n\r\n## ADVANCED EXAMPLE\r\n\r\n   Some more advanced features are shown in the examples below.\r\n\r\n   user@laptop:~$ `cp -a ~/.pw/ ~/.passw`\r\n\r\n   user@laptop:~$ `ls -al ~/.passw`\r\n\r\n    total 24\r\n    drwx------  2 user user 4096 Feb 16 22:18 .\r\n    drwxr-xr-x 73 user user 4096 Feb 16 22:31 ..\r\n    -rw-------  1 user user  250 Feb 16 21:45 config.sh\r\n    -rw-------  1 user user 8753 Feb 16 22:18 pw.tgz.gpg\r\n\r\n   user@laptop:~$ `mv ~/.passw/pw.tgz.gpg ~/.passw/archive1.tgz.gpg`\r\n\r\n   user@laptop:~$ `export PW_DIR=~/.passw`\r\n\r\n   user@laptop:~$ `echo $PW_DIR`\r\n\r\n    /home/user/.passw\r\n\r\n   user@laptop:~$ `pw -a archive1 ls --tree`\r\n\r\n    Passphrase for archive '/home/user/.passw/archive1.tgz': \r\n    ├── test1\r\n    └── test2\r\n        ├── test3\r\n        └── test4\r\n\r\n   user@laptop:~$ `pw -a archive1 set \"test2/test 5\" --multiline`\r\n\r\n    Passphrase for archive '/home/user/.passw/archive1.tgz': \r\n    Enter contents of test2/test 5 and press Ctrl+D when finished:\r\n\r\n    password\r\n    line 2\r\n    line 3\r\n\r\n   user@laptop:~$ `pw -a archive1 show \"test2/test 5\"`\r\n\r\n    Passphrase for archive '/home/user/.passw/archive1.tgz': \r\n    password\r\n    line 2\r\n    line 3\r\n\r\n   user@laptop:~$ `pw -a archive1 gen \"test2/test 5\" 40 --no-symbols --in-place`\r\n\r\n    Passphrase for archive '/home/user/.passw/archive1.tgz': \r\n    Password of test2/test 5 sent to clipboard. Will clear in 45 seconds.\r\n\r\n   user@laptop:~$ `pw -a archive1 show \"test2/test 5\"`\r\n\r\n    Passphrase for archive '/home/user/.passw/archive1.tgz': \r\n    3jXaVyxixcfnkYRR3xBr70kGxKK0I83LCmaMGeVc\r\n    line 2\r\n    line 3\r\n\r\n   user@laptop:~$ `sed -i ~/.passw/config.sh -e \"/ARCHIVE=/c ARCHIVE=archive1\"`\r\n\r\n   user@laptop:~$ `PW_DIR=~/.passw pw ls test2`\r\n\r\n    Passphrase for archive '/home/user/.passw/archive1.tgz': \r\n    test2/test3\r\n    test2/test4\r\n    test2/test 5\r\n\r\n   user@laptop:~$ `pw set-passphrase`\r\n\r\n    Passphrase for archive '/home/user/.passw/archive1.tgz': \r\n    Enter new passphrase for archive '/home/user/.passw/archive1.tgz': \r\n    Retype the passphrase for archive '/home/user/.passw/archive1.tgz': \r\n\r\n   user@laptop:~$ `pw set-keys CF90C77B D774A374 EB7D54A8`\r\n\r\n    Passphrase for archive '/home/user/.passw/archive1.tgz': \r\n\r\n   user@laptop:~$ `pw set-keys`\r\n\r\n    gpg (GnuPG) 2.0.22; Copyright (C) 2013 Free Software Foundation, Inc.\r\n    This is free software: you are free to change and redistribute it.\r\n    There is NO WARRANTY, to the extent permitted by law.\r\n\r\n    gpg: keyring `/home/user/.passw/.gnupg/secring.gpg' created\r\n    gpg: keyring `/home/user/.passw/.gnupg/pubring.gpg' created\r\n    Please select what kind of key you want:\r\n       (1) RSA and RSA (default)\r\n       (2) DSA and Elgamal\r\n       (3) DSA (sign only)\r\n       (4) RSA (sign only)\r\n    Your selection? \r\n\r\n## AUTHOR\r\n\r\n   `pw` was written by Dashamir Hoxha (dashohoxha@gmail.com). The code\r\n   is on GitHub at https://github.com/dashohoxha/pw.  `pw` started as\r\n   a fork of `pass` (http://www.passwordstore.org/), written by Jason\r\n   A. Donenfeld (Jason@zx2c4.com).\r\n\r\n## COPYLEFT\r\n\r\n   This program is free software; you can redistribute it and/or\r\n   modify it under the terms of the GNU General Public License as\r\n   published by the Free Software Foundation; either version 2 of the\r\n   License, or (at your option) any later version.\r\n\r\n   This program is distributed in the hope that it will be useful, but\r\n   WITHOUT ANY WARRANTY; without even the implied warranty of\r\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\r\n   General Public License for more details.\r\n\r\n   You should have received a copy of the GNU General Public License\r\n   along with this program; if not, write to the Free Soft‐ ware\r\n   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\r\n   02110-1301, USA.\r\n\r\n## SEE ALSO\r\n\r\n   `gpg2`(1), `pwgen`(1), `xclip`(1).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}